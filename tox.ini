[tox]
min_version = 4.11

envlist =
    py{3.11,3.12}-django{5.1}-wagtail{6.2,6.3}

[gh-actions]
python =
    3.11: py3.11
    3.12: py3.12

[gh-actions:env]
DB =
    sqlite: sqlite
    postgres: postgres

[testenv]
package = wheel
wheel_build_env = .pkg
use_frozen_constraints = true
constrain_package_deps = true

pass_env =
    FORCE_COLOR
    NO_COLOR

setenv =
    PYTHONPATH = {toxinidir}/tests:{toxinidir}
    PYTHONDEVMODE = 1

extras = testing

deps =
    django5.1: Django>=5.1,<5.2
    wagtail6.2: wagtail>=6.2,<6.3
    wagtail6.3: wagtail>=6.3,<6.4
    postgres: psycopg2>=2.9

install_command = python -Im pip install -U --pre {opts} {packages}
commands =
    python -m coverage run {toxinidir}/testmanage.py test --deprecation all {posargs: -v 2}

[testenv:coverage-report]
base_python = python3.12
package = skip
deps =
    coverage>=7.0,<8.0
commands =
    python -Im coverage combine
    python -Im coverage report -m

[testenv:interactive]
description = An interactive environment for local testing purposes
basepython = python3.12

commands_pre =
    python {toxinidir}/testmanage.py makemigrations
    python {toxinidir}/testmanage.py migrate
    python {toxinidir}/testmanage.py shell -c "from django.contrib.auth.models import User;(not User.objects.filter(username='admin').exists()) and User.objects.create_superuser('admin', 'super@example.com', 'changeme')"
    python {toxinidir}/testmanage.py createcachetable

commands =
    {posargs:python -Im {toxinidir}/testmanage.py runserver 0.0.0.0:8020}

setenv =
    INTERACTIVE = 1

[testenv:wagtailmain]
deps =
    flit>=3.8
    coverage>=7.0,<8.0
    wagtailmain: git+https://github.com/wagtail/wagtail.git@main


[testenv:djangomain]
deps =
    flit>=3.8
    coverage>=7.0,<8.0
    djangomain: git+https://github.com/django/django.git@main
